{"version":3,"sources":["Firebase/Firebase-config.jsx","Helpers/FileUpload.jsx","Helpers/LoadNotes.jsx","Types/Types.jsx","Actions/Notes.jsx","Hooks/useForm.jsx","Components/Notes/NotesAppbar.jsx","Components/Notes/NotePage.jsx","Components/NotesApp/NothingSelected.jsx","Actions/Ui.jsx","Actions/Auth.jsx","Components/NotesApp/NoteEntry.jsx","Components/NotesApp/NoteEntries.jsx","Components/NotesApp/Sidebar.jsx","Components/NotesApp/NoteAppPage.jsx","Components/Auth/LoginPage.jsx","Components/Auth/RegisterPage.jsx","Routers/AuthRouter.jsx","Routers/PublicRoute.jsx","Routers/PrivateRoute.jsx","Routers/AppRouter.jsx","Reducers/NotesReducer.jsx","Reducers/UiReducer.jsx","Store/Store.jsx","Reducers/authReducer.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bd","firestore","googleAuthProvider","auth","GoogleAuthProvider","FileUoload","file","a","formData","FormData","append","fetch","method","body","res","ok","json","cloudRes","secure_url","LoadNotes","uid","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","types","ActiveNote","note","type","payload","AddNewNote","StartLoadingNotes","dispatch","SetNotes","StartSaveNote","getState","url","noteToDB","doc","update","then","item","RefreshNote","Swal","fire","catch","error","icon","title","text","message","DeleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppbar","useDispatch","active","useSelector","state","className","moment","format","style","display","onChange","e","files","activeNote","allowOutsideClick","onBeforeOpen","showLoading","fileURL","close","StartUploading","onClick","document","querySelector","click","NotePage","formValues","handelImputChange","activeId","useRef","useEffect","current","console","log","placeholder","autoComplete","src","alt","delete","err","StartDelete","NothingSelected","SetError","RemoveError","StartLoading","FinishLoading","Login","displayName","Logout","JorunalEntry","date","noteDate","noteData","backgroundSize","backgroundImage","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","docRef","JournalPage","LoginPage","ui","msgError","loading","email","password","handleImputChange","onSubmit","preventDefault","length","validator","isEmail","signInWithEmailAndPassword","user","startLoginEmail","disabled","signInWithPopup","to","RegisterPage","fullname","password2","isFormValid","createUserWithEmailAndPassword","updateProfile","startRegisterWhitEmail","AuthRouter","exact","path","component","PublicRoute","isAuth","Component","rest","props","prototype","PropTypes","bool","isRequired","func","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","cheking","setCheking","isLogged","setisLogged","onAuthStateChanged","InitiialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.26443e19.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n  // Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB6SX5683ifAnzE2yY2jS3Cjub92YpXF94\",\r\n  authDomain: \"journalapp-1b130.firebaseapp.com\",\r\n  databaseURL: \"https://journalapp-1b130.firebaseio.com\",\r\n  projectId: \"journalapp-1b130\",\r\n  storageBucket: \"journalapp-1b130.appspot.com\",\r\n  messagingSenderId: \"552233466230\",\r\n  appId: \"1:552233466230:web:4c2e129552d26ee5a0a257\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst bd = firebase.firestore()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport{\r\n  bd,\r\n  googleAuthProvider,\r\n  firebase\r\n}","\r\n\r\nexport const FileUoload = async ( file ) => {\r\n\r\n    const cloudURL = 'https://api.cloudinary.com/v1_1/dcsvpxfw6/upload'\r\n\r\n    const formData = new FormData() \r\n    formData.append('upload_preset', 'App-Journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const res = await fetch( cloudURL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if ( res.ok ) {\r\n            const cloudRes = await res.json()\r\n            return cloudRes.secure_url\r\n        }\r\n        else {\r\n            throw await res.json()\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error ;\r\n    }\r\n\r\n\r\n}","import { bd } from \"../Firebase/Firebase-config\"\r\n\r\n\r\nexport const LoadNotes = async( uid ) => {\r\n\r\n    const notesSnap = await bd.collection( `${uid}/journal/notes` ).get()\r\n    const notes = []\r\n\r\n    notesSnap.forEach( snapChild => {\r\n        notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n        })\r\n    })\r\n    \r\n    return notes\r\n\r\n}","\r\n\r\nexport const types = {\r\n    \r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdate: '[Notes] Update note',\r\n    notesFileURL: '[Notes] Update image URL',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n}","import Swal from \"sweetalert2\"\r\nimport { bd } from \"../Firebase/Firebase-config\"\r\nimport { FileUoload } from \"../Helpers/FileUpload\"\r\nimport { LoadNotes } from \"../Helpers/LoadNotes\"\r\nimport { types } from './../Types/Types'\r\n\r\n\r\nexport const StartNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const docRef = await bd.collection(`${uid}/journal/notes`).add( newNote )\r\n\r\n        dispatch( ActiveNote( docRef.id, newNote ) )\r\n        dispatch( AddNewNote( docRef.id, newNote ) )\r\n\r\n    }\r\n}\r\n\r\nexport const ActiveNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const AddNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const StartLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await LoadNotes( uid )\r\n        dispatch( SetNotes( notes ) )\r\n    }\r\n}\r\n\r\nexport const SetNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const StartSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth\r\n\r\n        if ( !note.url ) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToDB = { ...note }\r\n        delete noteToDB.id\r\n\r\n        await bd.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToDB )\r\n        .then( item => {\r\n            dispatch( RefreshNote( note.id, noteToDB ) )\r\n            Swal.fire(\r\n                'Saved',\r\n                'Note was saved successfully',\r\n                'success'\r\n            )\r\n        })\r\n        .catch( error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error.message\r\n            })\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const RefreshNote = ( id, note ) => ({\r\n    type: types.notesUpdate,\r\n    payload:{\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const StartDelete = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const { uid } = getState().auth\r\n\r\n        await bd.doc(`${ uid }/journal/notes/${ id }`).delete()\r\n        .then( note => {\r\n            dispatch( DeleteNote( id ) )\r\n\r\n            Swal.fire(\r\n                'Removed',\r\n                'Note was removed successfully',\r\n                'success'\r\n            )\r\n        })\r\n        .catch( err => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: err.message\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const StartUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { active: activeNote } = getState().notes\r\n        \r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            text: 'Please wait',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n        const fileURL = await FileUoload( file[0] )\r\n        activeNote.url = fileURL\r\n        dispatch( StartSaveNote( activeNote ))\r\n        \r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const DeleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const NoteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NoteLogout, StartSaveNote, StartUploading } from '../../Actions/Notes'\r\n\r\nexport const NotesAppbar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSaveNote = () => {\r\n        dispatch( StartSaveNote( active ) )\r\n    }\r\n\r\n    const handleUpadteImage = () => {\r\n        document.querySelector('#FileSeleted').click();\r\n    }\r\n    \r\n    const handleFileChange = ( e ) => {\r\n        const file =  e.target.files ;\r\n        if ( file ) {\r\n            dispatch( StartUploading( file ) )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"note__appbar\">\r\n            <span> { moment().format('MMMM Do YYYY') } </span>\r\n\r\n            <input \r\n                type=\"file\" \r\n                style={{ display: \"none\" }}\r\n                id=\"FileSeleted\"\r\n                onChange={ handleFileChange }\r\n            />\r\n            <div className=\"\">\r\n                <button \r\n                    className=\"btn btn-outline-primary\"\r\n                    onClick={ handleUpadteImage }\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn btn-primary\"\r\n                    onClick={ handleSaveNote }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ActiveNote, StartDelete } from '../../Actions/Notes'\r\nimport { useForm } from '../../Hooks/useForm'\r\nimport { NotesAppbar } from './NotesAppbar'\r\n\r\nexport const NotePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n    const [ formValues, handelImputChange, reset ] = useForm( note )\r\n    const { title, body, id, url } = formValues\r\n    const activeId = useRef( note.id )\r\n    \r\n    useEffect(() => {\r\n        if ( note.id !== activeId.current ) {\r\n            reset( note )\r\n            activeId.current = note.id\r\n        }\r\n    }, [ reset, note ])\r\n\r\n    useEffect(() => {\r\n        dispatch( ActiveNote( formValues.id, {...formValues} ) )\r\n    }, [ formValues, dispatch ])\r\n\r\n    const handelDelete = () => {\r\n        dispatch( StartDelete( id ) )\r\n    }\r\n\r\n    console.log( note );\r\n    \r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppbar />\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Lorem Ipsum\"\r\n                    name=\"title\"\r\n                    className=\"notes__title-imput\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handelImputChange }\r\n                />\r\n                <textarea\r\n                    name=\"body\"\r\n                    placeholder=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Vel fugiat porro dolores aut quia quod et pariatur dolorum unde aliquid, ratione ducimus nisi veniam magni, iure consectetur sint, ipsa nam?\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handelImputChange }\r\n                />\r\n                {\r\n                    note.url &&\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src={ note.url } \r\n                                alt=\"note\"\r\n                            />\r\n                        </div>\r\n                }\r\n            </div>\r\n            <button \r\n                className=\"btn btn-outline-primary\"\r\n                onClick={ handelDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\" >\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                Or create an entry!\r\n            </p>\r\n\r\n            <i className=\"fas fa-star fa-4x mt-5\" />\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../Types/Types\";\r\n\r\n\r\nexport const SetError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const RemoveError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const StartLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const FinishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2'\r\nimport { types } from \"./../Types/Types\"\r\nimport { firebase, googleAuthProvider } from './../Firebase/Firebase-config'\r\nimport { FinishLoading, StartLoading } from \"./Ui\"\r\nimport { NoteLogout } from './Notes'\r\n\r\nexport const startLoginEmail = ( email, password ) => {\r\n    return ( dispatch ) => {\r\n        dispatch( StartLoading() )\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n        .then( async ({ user }) => {\r\n            dispatch( FinishLoading() )\r\n            dispatch( Login( user.uid, user.displayName ) )\r\n        })\r\n        .catch( e => {\r\n            console.log( e );\r\n            dispatch( FinishLoading() )\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: e.message,\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ({ user:{ uid, displayName } }) => {\r\n            dispatch(\r\n                Login( uid, displayName )\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const startRegisterWhitEmail = ( email, name, password ) => {\r\n    return ( dispatch ) => {\r\n        dispatch( StartLoading() )\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n        .then( async ({ user }) => {\r\n            await user.updateProfile({ displayName: name })\r\n            dispatch( FinishLoading() )\r\n            dispatch( Login( user.uid, user.displayName ) )\r\n        })\r\n        .catch( e => {\r\n            console.log( e );\r\n            dispatch( FinishLoading() )\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: e.message,\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const Login = ( uid, displayName ) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut()\r\n        dispatch( Logout() )\r\n        dispatch( NoteLogout() )\r\n    }\r\n}\r\n\r\nexport const Logout = () => ({\r\n    type: types.logout\r\n})\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ActiveNote } from '../../Actions/Notes'\r\n\r\nexport const JorunalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const noteDate = moment( date )\r\n\r\n    const noteData = {\r\n        id,\r\n        title,\r\n        body,\r\n        date\r\n    }\r\n\r\n    const handleNoteActive = () => {\r\n        dispatch( ActiveNote( id, noteData ) )\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"jorunal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleNoteActive }\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"jorunal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                > </div>\r\n            }\r\n\r\n            <div className=\"jorunal__entry-body\">\r\n                <p className=\"jorunal__entry-title\">\r\n                    { title } \r\n                </p>\r\n                <p className=\"jorunal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"jorunal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JorunalEntry } from './NoteEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JorunalEntry \r\n                        key={ note.id }\r\n                        { ...note } \r\n                    /> \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../Actions/Auth'\r\nimport { StartNewNote } from '../../Actions/Notes'\r\nimport { JournalEntries } from './NoteEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { name } = useSelector( state => state.auth )\r\n\r\n    const handelLogOut = () => {\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    const handleAddNote = () => {\r\n        dispatch( StartNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"app__sidebar\" >\r\n            <div className=\"sidebar__navbar\">\r\n                <h3 className=\"mt-5\"> \r\n                    <i className=\"fas fa-user\" />\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handelLogOut }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"sidebar__new-entry mt-5\"\r\n                onClick={ handleAddNote }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\" />\r\n                <p className=\"mt-1 mb-1\">\r\n                    Add new entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NotePage } from '../Notes/NotePage'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalPage = () => {\r\n\r\n    const { active } = useSelector( state => state.notes )\r\n\r\n    return (\r\n        <div className=\"app__main-content\">\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    active \r\n                    ? <NotePage />\r\n                    : <NothingSelected />\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmail } from '../../Actions/Auth'\r\nimport { RemoveError, SetError } from '../../Actions/Ui'\r\nimport { useForm } from './../../Hooks/useForm'\r\nimport validator from 'validator'\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError, loading } = useSelector( state => state.ui )\r\n\r\n    const [ formValues, handleImputChange ] = useForm({\r\n        email: 'david@gmail.com',\r\n        password: 'abc123'\r\n    })\r\n    const { email, password } = formValues;\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( password.length <= 0  ) {\r\n            dispatch( SetError( 'Error: @Password is required'  ) )\r\n            return false    \r\n        }\r\n        else if ( !validator.isEmail( email )  ) {\r\n            dispatch( SetError( 'Error: @Email is required and need email format'  ) )\r\n            return false    \r\n        }\r\n\r\n        dispatch( RemoveError() )\r\n        return true\r\n    }\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault()\r\n        if ( isFormValid() ) {\r\n            dispatch( startLoginEmail( email, password ) )\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = ( e ) => {\r\n        e.preventDefault()\r\n        dispatch( startGoogleLogin() )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"auth__title aling-center\">Login</h2>\r\n            {\r\n                msgError &&\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n            }\r\n            <form \r\n                onSubmit={ handleLogin } \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    type=\"email\" \r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleImputChange }\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"*******\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleImputChange }\r\n                    disabled={ loading }\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                >\r\n                    Login\r\n                </button>\r\n                <div className=\"auth__social-network\" >\r\n                    <p>Log with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/auth/register\" className=\"link\" >\r\n                    Create new Account\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../Hooks/useForm'\r\nimport validator from 'validator'\r\nimport { RemoveError, SetError } from '../../Actions/Ui'\r\nimport { startRegisterWhitEmail } from '../../Actions/Auth'\r\n\r\nexport const RegisterPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError, loading } = useSelector( state => state.ui )\r\n\r\n    const [ formValues, handleImputChange ] = useForm({\r\n        fullname: 'David Ledezma',\r\n        email: 'david@gmail.com',\r\n        password: 'abc123',\r\n        password2: 'abc123'\r\n    })\r\n    const { fullname, email, password, password2 } = formValues;\r\n\r\n    const handelRegister = ( e ) => {\r\n        e.preventDefault()\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWhitEmail( email, fullname, password  ))\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( fullname.length <= 0  ) {\r\n            dispatch( SetError( 'Error: @fullname is required'  ) )\r\n            return false    \r\n        }\r\n        else if ( !validator.isEmail( email ) ) {\r\n            dispatch( SetError( 'Error: @Email is required and need email format'  ) )\r\n            return false    \r\n        }\r\n        else if ( password !== password2 || password < 5 ) {\r\n            dispatch( SetError( 'Error: @Password have to be equeal an min leng 6'  ) )\r\n            return false    \r\n        }\r\n\r\n        dispatch( RemoveError() )\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"auth__title aling-center\">Register</h2>\r\n\r\n            {\r\n                msgError &&\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n            }\r\n\r\n            <form \r\n                onSubmit={ handelRegister } \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullname\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ fullname }\r\n                    onChange={ handleImputChange }\r\n                />\r\n                <input \r\n                    type=\"email\" \r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleImputChange }\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Pasword\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleImputChange }\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Cormfirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleImputChange }\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Register\r\n                </button>\r\n                <Link to=\"/auth/login\" className=\"link\" >\r\n                    Already register?\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginPage } from '../Components/Auth/LoginPage';\r\nimport { RegisterPage } from '../Components/Auth/RegisterPage';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={ LoginPage } />\r\n                    <Route exact path=\"/auth/register\" component={ RegisterPage } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            { ...rest }\r\n            component={ props => (\r\n                isAuth \r\n                ? <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n            )}\r\n        />    \r\n    )\r\n}\r\n\r\nPublicRoute.prototype = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname )\r\n\r\n    return (\r\n        <Route\r\n            { ...rest }\r\n            component={ props => (\r\n                isAuth \r\n                ? <Component {...props} />\r\n                : <Redirect to=\"/auth/login\" />\r\n            )}\r\n        />    \r\n    )\r\n}\r\n\r\nPrivateRoute.prototype = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { JournalPage } from '../Components/NotesApp/NoteAppPage';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from './../Firebase/Firebase-config'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Login } from '../Actions/Auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { StartLoadingNotes } from '../Actions/Notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    const [cheking, setCheking] = useState( true )\r\n    const [isLogged, setisLogged] = useState( false )\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n            if ( user?.uid ) {\r\n                dispatch( Login( user.uid, user.displayName) )\r\n                setisLogged( true )\r\n                dispatch( StartLoadingNotes( user.uid ) )\r\n            }\r\n            else{\r\n                setisLogged( false )\r\n            }\r\n            setCheking( false )\r\n\r\n        })\r\n\r\n    }, [dispatch, setCheking, setisLogged])\r\n\r\n    if ( cheking ) {\r\n        return(\r\n            <h1>Loading... </h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }\r\n                        isAuth={ isLogged } \r\n                    />\r\n                    \r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ JournalPage } \r\n                        isAuth={ isLogged } \r\n                    />\r\n                    \r\n                    <Redirect to=\"/auth/login\" />\r\n                \r\n                </Switch>\r\n            </div>\r\n    </Router>\r\n    )\r\n}\r\n","import { types } from \"../Types/Types\"\r\n\r\n\r\nconst InitiialState = {\r\n    notes: [],\r\n    active: null\r\n} \r\n\r\nexport const NotesReducer = ( state = InitiialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes:[\r\n                    action.payload,\r\n                    ...state.notes\r\n                ]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes:[\r\n                    ...action.payload\r\n                ]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map( note => \r\n                    note.id === action.payload.id \r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n        \r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from \"../Types/Types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const UiReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload,\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null,\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../Reducers/authReducer';\r\nimport { NotesReducer } from '../Reducers/NotesReducer';\r\nimport { UiReducer } from '../Reducers/UiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: UiReducer,\r\n    notes: NotesReducer\r\n})\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import { types } from \"../Types/Types\";\r\n\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n            \r\n        case types.logout:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './Routers/AppRouter';\nimport { store } from './Store/Store';\n\n\nfunction App() {\n  return (\n\n    <Provider store={ store } >\n      <AppRouter />\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/style.scss'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}